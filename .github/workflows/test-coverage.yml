name: Test Coverage

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-20.04
    
    strategy:
      matrix:
        php-version: ['5.6']
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, dom, fileinfo, mysql, libxml, xml, xmlwriter, tokenizer, filter, json, phar, pcre, openssl, pdo, pdo_sqlite, mcrypt
        coverage: xdebug
        tools: composer:v1
        ini-values: error_reporting=E_ALL
    
    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    
    - name: Cache composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    
    - name: Copy .env
      run: |
        php -r "file_exists('.env') || copy('.env.example', '.env');"
    
    - name: Install dependencies
      run: |
        composer self-update --1
        composer install --prefer-dist --no-progress --no-interaction
    
    - name: Generate app key
      run: php artisan key:generate
    
    - name: Create SQLite database
      run: touch database/database.sqlite
    
    - name: Run tests with coverage
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit --coverage-clover=coverage.xml --coverage-text
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Generate coverage report
      run: |
        echo "## Test Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        vendor/bin/phpunit --coverage-text | grep -E "^\s*(Lines|Functions|Classes)" >> $GITHUB_STEP_SUMMARY || true